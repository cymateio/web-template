============================= test session starts ==============================
platform darwin -- Python 3.10.0, pytest-7.2.1, pluggy-1.0.0
rootdir: /Users/wesleyhoang/Desktop/code/cymate-template/web-template
plugins: xdist-3.1.0, html-3.2.0, metadata-2.0.4
gw0 I / gw1 I
[gw0] Python 3.10.0 (v3.10.0:b494f5935c, Oct  4 2021, 14:59:20) [Clang 12.0.5 (clang-1205.0.22.11)]
[gw1] Python 3.10.0 (v3.10.0:b494f5935c, Oct  4 2021, 14:59:20) [Clang 12.0.5 (clang-1205.0.22.11)]
gw0 [7] / gw1 [7]

scheduling tests via LoadFileScheduling

src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_signin 
src/main/python/company-template/tests/testsuite1-smoke/test_smoke.py::test_smoke_one 
[gw0] [ 14%] PASSED src/main/python/company-template/tests/testsuite1-smoke/test_smoke.py::test_smoke_one 
src/main/python/company-template/tests/testsuite1-smoke/test_smoke.py::test_smoke_two 
[gw0] [ 28%] PASSED src/main/python/company-template/tests/testsuite1-smoke/test_smoke.py::test_smoke_two 
src/main/python/company-template/tests/testsuite2-functional/test_login_page.py::TestLogin::test_LoginToPageAndCheckTitle 
[gw1] [ 42%] PASSED src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_signin 
src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_main 
[gw0] [ 57%] PASSED src/main/python/company-template/tests/testsuite2-functional/test_login_page.py::TestLogin::test_LoginToPageAndCheckTitle 
src/main/python/company-template/tests/testsuite2-functional/test_main_page.py::TestLogin::test_NavigatingToWorkspacesFromMain 
[gw1] [ 71%] FAILED src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_main 
src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_workspace 
[gw0] [ 85%] FAILED src/main/python/company-template/tests/testsuite2-functional/test_main_page.py::TestLogin::test_NavigatingToWorkspacesFromMain 
[gw1] [100%] FAILED src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_workspace 
[gw1] [100%] ERROR src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_workspace 

==================================== ERRORS ====================================
_______________________ ERROR at call of test_workspace ________________________
[gw1] darwin -- Python 3.10.0 /Users/wesleyhoang/Desktop/code/cymate-template/web-template/venv/bin/python3
[gw1] darwin -- Python 3.10.0 /Users/wesleyhoang/Desktop/code/cymate-template/web-template/venv/bin/python3[gw1] darwin -- Python 3.10.0 /Users/wesleyhoang/Desktop/code/cymate-template/web-template/venv/bin/python3

driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="5e1a2a4f93702b0b47dfbfc7c094c26e")>
logger = <Logger conftest (INFO)>

    @pytest.mark.smoke
    @pytest.mark.dependency(depends=["test_main"])
    def test_workspace(driver, logger):
        logger.info('1 workspaces info')
        logger.info('2 workspaces info')
        logger.info('3 workspaces info')
        workspaces_page = Workspaces(driver)
>       workspaces_page.send_api()

src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/main/python/company-template/pages/web/workspaces.py:18: in send_api
    self.click_collection()
src/main/python/company-template/pages/web/workspaces.py:23: in click_collection
    self.wait_for_element_to_load(self.dropdown_collection)
src/main/python/company-template/pages/web/workspaces.py:35: in wait_for_element_to_load
    WebDriverWait(self.driver, 10).until(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="5e1a2a4f93702b0b47dfbfc7c094c26e")>
method = <function visibility_of_element_located.<locals>._predicate at 0x10345a290>
message = ''

    def until(self, method, message: str = ""):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            time.sleep(self._poll)
            if time.monotonic() > end_time:
                break
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       0   chromedriver                        0x0000000102787138 chromedriver + 4923704
E       1   chromedriver                        0x00000001026ff9d3 chromedriver + 4368851
E       2   chromedriver                        0x0000000102348787 chromedriver + 472967
E       3   chromedriver                        0x000000010238cba3 chromedriver + 752547
E       4   chromedriver                        0x000000010238cdf1 chromedriver + 753137
E       5   chromedriver                        0x00000001023d3734 chromedriver + 1042228
E       6   chromedriver                        0x00000001023b5fdd chromedriver + 921565
E       7   chromedriver                        0x00000001023d0c0f chromedriver + 1031183
E       8   chromedriver                        0x00000001023b5d23 chromedriver + 920867
E       9   chromedriver                        0x000000010237ca4b chromedriver + 686667
E       10  chromedriver                        0x000000010237e044 chromedriver + 692292
E       11  chromedriver                        0x00000001027528fe chromedriver + 4708606
E       12  chromedriver                        0x0000000102757e22 chromedriver + 4730402
E       13  chromedriver                        0x00000001027606bf chromedriver + 4765375
E       14  chromedriver                        0x0000000102758e80 chromedriver + 4734592
E       15  chromedriver                        0x0000000102729975 chromedriver + 4540789
E       16  chromedriver                        0x000000010277ae78 chromedriver + 4873848
E       17  chromedriver                        0x000000010277aff5 chromedriver + 4874229
E       18  chromedriver                        0x000000010278f6de chromedriver + 4957918
E       19  libsystem_pthread.dylib             0x00007fff6bcc1109 _pthread_start + 148
E       20  libsystem_pthread.dylib             0x00007fff6bcbcb8b thread_start + 15

venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException[gw1] darwin -- Python 3.10.0 /Users/wesleyhoang/Desktop/code/cymate-template/web-template/venv/bin/python3

request = <SubRequest 'driver' for <Function test_signin>>

    @pytest.fixture(scope="session")
    def driver(request):
    
        config = get_config(request)
        test_name = request.node.name
    
        if config["env"] == "saucelabs":
            _credentials = config["saucelabs_username"]+":"+config["saucelabs_accesskey"]
            _url = "https://" + _credentials + "@ondemand.saucelabs.com/wd/hub"
            config["capabilities"]["sauce:options"]["name"] = test_name
            driver = webdriver.Remote(_url, config["capabilities"])
        else:
            chrome_options = Options()
            chrome_options.add_experimental_option("detach", True)
            driver = webdriver.Chrome(options=chrome_options)
    
        def quit():
            # if config["env"] == "saucelabs":
            sauce_result = "passed"
            if request.node.rep_setup.failed:
                sauce_result = "failed"
            elif request.node.rep_setup.passed:
                if request.node.rep_call.failed:
                    sauce_result = "failed"
    
            # sauce_result = "failed" if request.node.rep_call.failed else "passed"
            # sauce_result = "failed" if report.failed else "passed"
            driver.execute_script("sauce:job-result={}".format(sauce_result))
            driver.quit()
    
        base_url = config["base_url"]
        driver.get(base_url)
    
        # request.addfinalizer(quit)
        yield driver
>       quit()

src/main/python/company-template/tests/conftest.py:217: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def quit():
        # if config["env"] == "saucelabs":
        sauce_result = "passed"
>       if request.node.rep_setup.failed:
E       AttributeError: 'Session' object has no attribute 'rep_setup'

src/main/python/company-template/tests/conftest.py:201: AttributeError
------------------------------ Captured log setup ------------------------------
14696 - 21:28:55 - INFO - 1 ==================================== STARTING TEST: test_workspace
14696 - 21:28:55 - INFO - 2 ==================================== STARTING TEST: test_workspace
14696 - 21:28:55 - INFO - 3 ==================================== STARTING TEST: test_workspace
------------------------------ Captured log call -------------------------------
14696 - 21:28:55 - INFO - 1 workspaces info
14696 - 21:28:55 - INFO - 2 workspaces info
14696 - 21:28:55 - INFO - 3 workspaces info
---------------------------- Captured log teardown -----------------------------
14696 - 21:29:05 - INFO - 1 ==================================== FINISHED TEST: test_workspace
14696 - 21:29:05 - INFO - 2 ==================================== FINISHED TEST: test_workspace
14696 - 21:29:05 - INFO - 3 ==================================== FINISHED TEST: test_workspace
=================================== FAILURES ===================================
__________________________________ test_main ___________________________________
[gw1] darwin -- Python 3.10.0 /Users/wesleyhoang/Desktop/code/cymate-template/web-template/venv/bin/python3

driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="5e1a2a4f93702b0b47dfbfc7c094c26e")>
logger = <Logger conftest (INFO)>

    @pytest.mark.smoke
    @pytest.mark.dependency(depends=["test_signin"])
    def test_main(driver, logger):
        logger.info('1 main info')
        logger.info('2 main info')
        logger.info('3 main info')
        main_page = Main(driver)
>       main_page.navigate_workspace()

src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/main/python/company-template/pages/web/main.py:17: in navigate_workspace
    self.wait_for_dropdown_to_load()
src/main/python/company-template/pages/web/main.py:23: in wait_for_dropdown_to_load
    WebDriverWait(self.driver, 10).until(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="5e1a2a4f93702b0b47dfbfc7c094c26e")>
method = <function visibility_of_element_located.<locals>._predicate at 0x10345a4d0>
message = ''

    def until(self, method, message: str = ""):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            time.sleep(self._poll)
            if time.monotonic() > end_time:
                break
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       0   chromedriver                        0x0000000102787138 chromedriver + 4923704
E       1   chromedriver                        0x00000001026ff9d3 chromedriver + 4368851
E       2   chromedriver                        0x0000000102348787 chromedriver + 472967
E       3   chromedriver                        0x000000010238cba3 chromedriver + 752547
E       4   chromedriver                        0x000000010238cdf1 chromedriver + 753137
E       5   chromedriver                        0x00000001023d3734 chromedriver + 1042228
E       6   chromedriver                        0x00000001023b5fdd chromedriver + 921565
E       7   chromedriver                        0x00000001023d0c0f chromedriver + 1031183
E       8   chromedriver                        0x00000001023b5d23 chromedriver + 920867
E       9   chromedriver                        0x000000010237ca4b chromedriver + 686667
E       10  chromedriver                        0x000000010237e044 chromedriver + 692292
E       11  chromedriver                        0x00000001027528fe chromedriver + 4708606
E       12  chromedriver                        0x0000000102757e22 chromedriver + 4730402
E       13  chromedriver                        0x00000001027606bf chromedriver + 4765375
E       14  chromedriver                        0x0000000102758e80 chromedriver + 4734592
E       15  chromedriver                        0x0000000102729975 chromedriver + 4540789
E       16  chromedriver                        0x000000010277ae78 chromedriver + 4873848
E       17  chromedriver                        0x000000010277aff5 chromedriver + 4874229
E       18  chromedriver                        0x000000010278f6de chromedriver + 4957918
E       19  libsystem_pthread.dylib             0x00007fff6bcc1109 _pthread_start + 148
E       20  libsystem_pthread.dylib             0x00007fff6bcbcb8b thread_start + 15

venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException
------------------------------ Captured log setup ------------------------------
14696 - 21:28:09 - INFO - 1 ==================================== STARTING TEST: test_main
14696 - 21:28:09 - INFO - 2 ==================================== STARTING TEST: test_main
14696 - 21:28:09 - INFO - 3 ==================================== STARTING TEST: test_main
------------------------------ Captured log call -------------------------------
14696 - 21:28:09 - INFO - 1 main info
14696 - 21:28:09 - INFO - 2 main info
14696 - 21:28:09 - INFO - 3 main info
________________ TestLogin.test_NavigatingToWorkspacesFromMain _________________
[gw0] darwin -- Python 3.10.0 /Users/wesleyhoang/Desktop/code/cymate-template/web-template/venv/bin/python3

self = <test_main_page.TestLogin object at 0x10aed71f0>

    @pytest.mark.functional
    def test_NavigatingToWorkspacesFromMain(self):
        signin_page = Signin(self.driver)
        user_data = get_user_data(self.config)
        signin_page.signin(user_data["username"], user_data["password"])
    
        main_page = Main(self.driver)
>       main_page.navigate_workspace()

src/main/python/company-template/tests/testsuite2-functional/test_main_page.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/main/python/company-template/pages/web/main.py:17: in navigate_workspace
    self.wait_for_dropdown_to_load()
src/main/python/company-template/pages/web/main.py:23: in wait_for_dropdown_to_load
    WebDriverWait(self.driver, 10).until(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="dce97600d6ec8e88579b20431f0eed3f")>
method = <function visibility_of_element_located.<locals>._predicate at 0x10aece9e0>
message = ''

    def until(self, method, message: str = ""):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            time.sleep(self._poll)
            if time.monotonic() > end_time:
                break
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       0   chromedriver                        0x00000001012e8138 chromedriver + 4923704
E       1   chromedriver                        0x00000001012609d3 chromedriver + 4368851
E       2   chromedriver                        0x0000000100ea9787 chromedriver + 472967
E       3   chromedriver                        0x0000000100eedba3 chromedriver + 752547
E       4   chromedriver                        0x0000000100eeddf1 chromedriver + 753137
E       5   chromedriver                        0x0000000100f34734 chromedriver + 1042228
E       6   chromedriver                        0x0000000100f16fdd chromedriver + 921565
E       7   chromedriver                        0x0000000100f31c0f chromedriver + 1031183
E       8   chromedriver                        0x0000000100f16d23 chromedriver + 920867
E       9   chromedriver                        0x0000000100edda4b chromedriver + 686667
E       10  chromedriver                        0x0000000100edf044 chromedriver + 692292
E       11  chromedriver                        0x00000001012b38fe chromedriver + 4708606
E       12  chromedriver                        0x00000001012b8e22 chromedriver + 4730402
E       13  chromedriver                        0x00000001012c16bf chromedriver + 4765375
E       14  chromedriver                        0x00000001012b9e80 chromedriver + 4734592
E       15  chromedriver                        0x000000010128a975 chromedriver + 4540789
E       16  chromedriver                        0x00000001012dbe78 chromedriver + 4873848
E       17  chromedriver                        0x00000001012dbff5 chromedriver + 4874229
E       18  chromedriver                        0x00000001012f06de chromedriver + 4957918
E       19  libsystem_pthread.dylib             0x00007fff6bcc1109 _pthread_start + 148
E       20  libsystem_pthread.dylib             0x00007fff6bcbcb8b thread_start + 15

venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException
---------------------------- Captured stdout setup -----------------------------
================ RUNNING TEST: {test_name}
------------------------------ Captured log setup ------------------------------
14695 - 21:28:25 - INFO - 1 ==================================== STARTING TEST: test_NavigatingToWorkspacesFromMain
14695 - 21:28:25 - INFO - 2 ==================================== STARTING TEST: test_NavigatingToWorkspacesFromMain
14695 - 21:28:25 - INFO - 3 ==================================== STARTING TEST: test_NavigatingToWorkspacesFromMain
________________________________ test_workspace ________________________________
[gw1] darwin -- Python 3.10.0 /Users/wesleyhoang/Desktop/code/cymate-template/web-template/venv/bin/python3

driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="5e1a2a4f93702b0b47dfbfc7c094c26e")>
logger = <Logger conftest (INFO)>

    @pytest.mark.smoke
    @pytest.mark.dependency(depends=["test_main"])
    def test_workspace(driver, logger):
        logger.info('1 workspaces info')
        logger.info('2 workspaces info')
        logger.info('3 workspaces info')
        workspaces_page = Workspaces(driver)
>       workspaces_page.send_api()

src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/main/python/company-template/pages/web/workspaces.py:18: in send_api
    self.click_collection()
src/main/python/company-template/pages/web/workspaces.py:23: in click_collection
    self.wait_for_element_to_load(self.dropdown_collection)
src/main/python/company-template/pages/web/workspaces.py:35: in wait_for_element_to_load
    WebDriverWait(self.driver, 10).until(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="5e1a2a4f93702b0b47dfbfc7c094c26e")>
method = <function visibility_of_element_located.<locals>._predicate at 0x10345a290>
message = ''

    def until(self, method, message: str = ""):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            time.sleep(self._poll)
            if time.monotonic() > end_time:
                break
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       0   chromedriver                        0x0000000102787138 chromedriver + 4923704
E       1   chromedriver                        0x00000001026ff9d3 chromedriver + 4368851
E       2   chromedriver                        0x0000000102348787 chromedriver + 472967
E       3   chromedriver                        0x000000010238cba3 chromedriver + 752547
E       4   chromedriver                        0x000000010238cdf1 chromedriver + 753137
E       5   chromedriver                        0x00000001023d3734 chromedriver + 1042228
E       6   chromedriver                        0x00000001023b5fdd chromedriver + 921565
E       7   chromedriver                        0x00000001023d0c0f chromedriver + 1031183
E       8   chromedriver                        0x00000001023b5d23 chromedriver + 920867
E       9   chromedriver                        0x000000010237ca4b chromedriver + 686667
E       10  chromedriver                        0x000000010237e044 chromedriver + 692292
E       11  chromedriver                        0x00000001027528fe chromedriver + 4708606
E       12  chromedriver                        0x0000000102757e22 chromedriver + 4730402
E       13  chromedriver                        0x00000001027606bf chromedriver + 4765375
E       14  chromedriver                        0x0000000102758e80 chromedriver + 4734592
E       15  chromedriver                        0x0000000102729975 chromedriver + 4540789
E       16  chromedriver                        0x000000010277ae78 chromedriver + 4873848
E       17  chromedriver                        0x000000010277aff5 chromedriver + 4874229
E       18  chromedriver                        0x000000010278f6de chromedriver + 4957918
E       19  libsystem_pthread.dylib             0x00007fff6bcc1109 _pthread_start + 148
E       20  libsystem_pthread.dylib             0x00007fff6bcbcb8b thread_start + 15

venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException
------------------------------ Captured log setup ------------------------------
14696 - 21:28:55 - INFO - 1 ==================================== STARTING TEST: test_workspace
14696 - 21:28:55 - INFO - 2 ==================================== STARTING TEST: test_workspace
14696 - 21:28:55 - INFO - 3 ==================================== STARTING TEST: test_workspace
------------------------------ Captured log call -------------------------------
14696 - 21:28:55 - INFO - 1 workspaces info
14696 - 21:28:55 - INFO - 2 workspaces info
14696 - 21:28:55 - INFO - 3 workspaces info
- generated html file: file:///Users/wesleyhoang/Desktop/code/cymate-template/web-template/test-output/reports/report_2023-02-16_21-27-53.html -
=========================== short test summary info ============================
FAILED src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_main
FAILED src/main/python/company-template/tests/testsuite2-functional/test_main_page.py::TestLogin::test_NavigatingToWorkspacesFromMain
FAILED src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_workspace
FAILED src/main/python/company-template/tests/testsuite1-smoke/test_workflow.py::test_workspace
=============== 3 failed, 4 passed, 1 error in 71.69s (0:01:11) ================
